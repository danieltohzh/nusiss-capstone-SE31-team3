version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
      #docker: 19
    commands:
      - echo Installing dependencies...
      - pip install --upgrade pip
      - pip install awscli

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - >
        aws ecr get-login-password 
        --region $AWS_DEFAULT_REGION | docker login 
        --username AWS --password-stdin 
        $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Build started on `date`

  build:
    commands:
      - echo Building the Docker image...
      - cd flaskapp
      - docker build -t flask-app .
      - docker tag flask-app:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/issdsai-flask:latest

  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/issdsai-flask:latest
      - echo Writing image definition file...
      - printf '[{"name":"flask-app","imageUri":"%s.dkr.ecr.%s.amazonaws.com/flask-app:latest"}]' 499969923602 ap-southeast-1 > flask-app-image.json
      - echo Deploying to Kubernetes cluster...
      - cd ..
      - aws eks --region ap-southeast-1 update-kubeconfig --name $CLUSTER_NAME
      - echo Printing kubeconfig...
      - cat $HOME/.kube/config
      - kubectl get cm aws-auth -o yaml -n kube-system
      - kubectl apply -f flask-deployment.yaml
      - kubectl apply -f flask-hpa.yaml
      - kubectl apply -f flask-service.yaml
      - kubectl apply -f ingress.yaml

artifacts:
  files:
    - flaskapp/flask-app-image.json

env:
  variables:
    AWS_ACCOUNT_ID: "499969923602"
    AWS_DEFAULT_REGION: "ap-southeast-1"
    CLUSTER_NAME: "issdsai"
  